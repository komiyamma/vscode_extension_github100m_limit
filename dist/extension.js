(()=>{"use strict";var e={265:function(e,t,i){var o=this&&this.__createBinding||(Object.create?function(e,t,i,o){void 0===o&&(o=i);var n=Object.getOwnPropertyDescriptor(t,i);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,o,n)}:function(e,t,i,o){void 0===o&&(o=i),e[o]=t[i]}),n=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),r=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&o(t,e,i);return n(t,e),t};Object.defineProperty(t,"__esModule",{value:!0}),t.deactivate=t.activate=void 0;const s=r(i(398)),c=r(i(896));t.activate=function(e){console.log('Congratulations, your extension "github100mbyteslimithook" is now active!');let t=s.commands.registerCommand("github100mbyteslimithook.initializeCommand",(()=>{}));s.workspace.onDidOpenTextDocument((e=>{e.fileName,function(){if(s.workspace.workspaceFolders){let e=s.workspace.workspaceFolders?.[0];if(e){let t=e.uri,i=t.fsPath+"/.git/config";if(!c.existsSync(i))return!1;let o=t.fsPath+"/.git/hooks/post-checkout",n=t.fsPath+"/.git/hooks/post-commit",r=t.fsPath+"/.git/hooks/post-merge",s=t.fsPath+"/.git/hooks/pre-push";if(c.existsSync(o)&&c.existsSync(n)&&c.existsSync(r)&&c.existsSync(s))return!1;let a=t.fsPath+"/.git/hooks/pre-commit";if(c.existsSync(a))return!1;{const e='#!/bin/sh\n\n# Check if any file being committed exceeds 100MB\nlimit=104857600 # 100MB in bytes\nfor file in $(git diff --cached --name-only); do\n    file_size=$(stat -c %s "$file")\n    if [ $file_size -gt $limit ]; then\n        echo "Error: Cannot commit a file larger than 100 MB. Abort commit."\n        exit 1\n    fi\ndone\n';c.writeFileSync(a,e)}}}}()})),e.subscriptions.push(t)},t.deactivate=function(){}},398:e=>{e.exports=require("vscode")},896:e=>{e.exports=require("fs")}},t={},i=function i(o){var n=t[o];if(void 0!==n)return n.exports;var r=t[o]={exports:{}};return e[o].call(r.exports,r,r.exports,i),r.exports}(265);module.exports=i})();